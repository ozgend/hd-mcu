/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((module) => {

"use strict";
module.exports = require("button");

/***/ }),
/* 2 */
/***/ ((module) => {

"use strict";
module.exports = require("events");

/***/ }),
/* 3 */
/***/ ((module) => {

"use strict";
module.exports = require("fs");

/***/ }),
/* 4 */
/***/ ((module) => {

"use strict";
module.exports = require("gpio");

/***/ }),
/* 5 */
/***/ ((module) => {

"use strict";
module.exports = require("rtc");

/***/ }),
/* 6 */
/***/ ((module) => {

"use strict";
module.exports = require("spi");

/***/ }),
/* 7 */
/***/ ((module) => {

"use strict";
module.exports = require("uart");

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
(() => {
(()=>{"use strict";var e={258:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.BaseService=void 0;const s=i(509),n=i(971),o=i(597);t.BaseService=class{constructor(e,t){var i,s,o;this.options={serviceCode:t.serviceCode,serviceType:t.serviceType,updateInterval:null!==(i=t.updateInterval)&&void 0!==i?i:5e3,idleTimeout:null!==(s=t.idleTimeout)&&void 0!==s?s:12e4,broadcastMode:null!==(o=t.broadcastMode)&&void 0!==o?o:n.BroadcastMode.OnDemandPolling,commands:t.commands&&t.commands.length>0?[...Object.values(n.ServiceCommand),...t.commands]:Object.values(n.ServiceCommand)},this.eventBus=null!=e?e:{emit:()=>{},on:()=>{}},this.status=n.ServiceStatus.Initialized,this.broadcastPid=null,this.isRunning=!1,this.data={},this.eventBus.on(n.EventType.CommandForService,((e,t,i)=>{e===this.options.serviceCode&&this.handleCommand(t,i)}))}handleCommand(e,t){switch(s.Logging.debug(this.options.serviceCode,n.EventType.CommandForService,e,t),e){case n.ServiceCommand.START:this.start();break;case n.ServiceCommand.STOP:this.stop();break;case n.ServiceCommand.INFO:this.publishInformation();break;case n.ServiceCommand.DATA:this.publishData();break;case n.ServiceCommand.SET:this.peristSettings(t)}}isStarted(){return this.status===n.ServiceStatus.Started}setup(){s.Logging.info(this.options.serviceCode,"setup"),this.status=n.ServiceStatus.Available}start(){this.isStarted()?s.Logging.info(this.options.serviceCode,"already running"):(s.Logging.info(this.options.serviceCode,"starting"),this.isRunning=!0,this.options.broadcastMode===n.BroadcastMode.ContinuousStream&&(this.broadcastPid=setInterval((()=>{this.publishData()}),this.options.updateInterval)),s.Logging.info(this.options.serviceCode,"started."),this.options.broadcastMode===n.BroadcastMode.ContinuousStream&&setTimeout((()=>{this.stop()}),this.options.idleTimeout),this.status=n.ServiceStatus.Started,this.publishInformation())}stop(){this.isRunning?(s.Logging.info(this.options.serviceCode,"stopping"),this.broadcastPid&&clearInterval(this.broadcastPid),this.isRunning=!1,this.broadcastPid=null,s.Logging.info(this.options.serviceCode,"stopped."),this.status=n.ServiceStatus.Stopped,this.publishInformation()):s.Logging.info(this.options.serviceCode,"already stopped")}getInfo(){return Object.assign({schemaVersion:o.SchemaVersion,status:this.status,isRunning:this.isRunning},this.options)}peristSettings(e){s.Logging.debug(this.options.serviceCode,n.ServiceCommand.SET,e)}publishData(){s.Logging.debug(this.options.serviceCode,n.ServiceCommand.DATA),this.eventBus.emit(n.EventType.DataFromService,this.options.serviceCode,n.ServiceCommand.DATA,this.data)}publishInformation(){s.Logging.debug(this.options.serviceCode,n.ServiceCommand.INFO,this.isRunning),this.eventBus.emit(n.EventType.DataFromService,this.options.serviceCode,n.ServiceCommand.INFO,this.getInfo())}}},642:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.eventBus=t.EventBus=void 0;const s=i(261);class n extends s.EventEmitter{}t.EventBus=n,t.eventBus=new n},416:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.publishToSerial=void 0;const s=i(8),n=i(672),o=i(509),a=i(971),r=i(642),c={baudrate:9600,bits:8,partity:s.UART.PARTIY_NONE,stop:1,flow:s.UART.FLOW_NONE,bufferSize:2048},d=new s.UART(0,c);o.Logging.info(a.ServiceCode.EventBus,"emitter ready"),setTimeout((()=>{d.write(`AT+NAME${a.Hardware.MCU_NAME}\n`),o.Logging.info(a.ServiceCode.EventBus,"uart setup done",`AT+NAME${a.Hardware.MCU_NAME}`)}),1e3),o.Logging.info(a.ServiceCode.EventBus,"uart ready",c.baudrate);let l="",h="",u=!1;d.on("data",(e=>{e.forEach((e=>!u&&l.includes("<START>")?(u=!0,h="",void(l="")):u&&l.includes("<END>")?(u=!1,S(h),h="",void(l="")):void(10===e?(u?h+=l:l.includes("OK")?o.Logging.debug(a.ServiceCode.EventBus,"SERIAL_PAYLOAD",l):r.eventBus.emit(a.EventType.DataFromSerial,l.trim()),l=""):0!==e&&(l+=String.fromCharCode(e).trim()))))}));const S=e=>{(0,n.writeFile)(a.FILE_BUNDLE,e)};r.eventBus.on(a.EventType.DataFromService,((e,t,i)=>{o.Logging.debug(a.ServiceCode.EventBus,a.EventType.DataFromService,{serviceCode:e,eventType:t,serviceData:i}),d.write(`${e}${a.Seperator.SerialCommand}${t}${a.Seperator.ServiceData}${JSON.stringify(i)}\n`)})),r.eventBus.on(a.EventType.DataFromSerial,(e=>{o.Logging.debug(a.ServiceCode.EventBus,a.EventType.DataFromSerial,{serialPayload:e});let t=e.split(a.Seperator.SerialCommand);const i=t[0];let s,n=null;t[1].startsWith(a.ServiceCommand.SET)?(t=t[1].split(a.Seperator.ServiceData),s=t[0],n=t[1]):s=t[1],o.Logging.debug(a.ServiceCode.EventBus,a.EventType.DataFromSerial,{serviceCode:i,command:s,data:n}),e.startsWith(a.ServiceCode.Module)?r.eventBus.emit(a.EventType.CommandForModule,i,s,n):r.eventBus.emit(a.EventType.CommandForService,i,s,n)})),o.Logging.info(a.ServiceCode.EventBus,"eventBus ready"),setInterval((()=>{d.write("0_heartbeat\n")}),a.Hardware.HEARTBEAT_PUSH_INTERVAL),t.publishToSerial=(e,t,i)=>{r.eventBus.emit(a.EventType.DataFromService,e,t,i)}},894:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.HC4051=void 0;const i=[[LOW,LOW,LOW],[LOW,LOW,HIGH],[LOW,HIGH,LOW],[LOW,HIGH,HIGH],[HIGH,LOW,LOW],[HIGH,LOW,HIGH],[HIGH,HIGH,LOW],[HIGH,HIGH,HIGH]];t.HC4051=class{constructor(e){this.pinData=e.pinData,this.pinA=e.pinA,this.pinB=e.pinB,this.pinC=e.pinC,this.pinInhibit=e.pinInhibit,this.connectedChannels=e.connectedChannels||[0,1,2,3,4,5,6,7],this.connectedChannelSize=e.connectedChannels?e.connectedChannels.length:e.connectedChannelSize||8}init(){pinMode(this.pinA,OUTPUT),pinMode(this.pinB,OUTPUT),pinMode(this.pinC,OUTPUT),void 0!==this.pinData&&pinMode(this.pinData,INPUT),void 0!==this.pinInhibit&&pinMode(this.pinInhibit,OUTPUT),this.enableChannelIndex(0)}enableChannel(e){return this.connectedChannels.indexOf(e)<0?(console.error(`HC4051: channel not connected: ${e} (connected: ${this.connectedChannels})`),!1):this.enableChannelIndex(this.connectedChannels.indexOf(e))}enableChannelIndex(e){return e>=8?(console.error(`HC4051: channel out of range: ${e} (max: 7)`),!1):(void 0!==this.pinInhibit&&digitalWrite(this.pinInhibit,LOW),digitalWrite(this.pinC,i[e][0]),digitalWrite(this.pinB,i[e][1]),digitalWrite(this.pinA,i[e][2]),!0)}disableAll(){void 0!==this.pinInhibit&&digitalWrite(this.pinInhibit,HIGH)}}},878:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MAX6675=void 0;const s=i(291),n=i(98),o=[0,0,0,0];t.MAX6675=class{constructor(e){this.cs=e.cs||13,this.bus=e.bus||1,this.spiOptions={mode:e.mode||n.SPI.MODE_1,baudrate:e.baudrate||2e6,bitorder:e.bitorder||n.SPI.MSB,sck:e.sck||10,clk:e.sck||10,miso:e.miso||12,mosi:-1}}init(){try{return this.spiBus=new n.SPI(this.bus,this.spiOptions),this.spiCs=new s.GPIO(this.cs,"out"),this.spiCs.high(),console.log("MAX6675: init"),console.log(this.spiCs),console.log(this.spiBus),!0}catch(e){return console.error(e),!1}}close(){this.spiBus&&(console.log("MAX6675: close"),this.spiBus.close())}readCelcius(){const e=this.readRaw();return 4&e?(console.error("MAX6675: no thermocouple attached!"),null):.25*(e>>3)}readFahrenheit(){const e=this.readCelcius();return null===e?null:1.8*e+32}readRaw(){if(this.spiCs){this.spiCs.low();const e=this.readRaw2();return this.spiCs.high(),e}return console.error("SPICS is not initialized"),0}readRaw1(){try{this.spiBus.send(new Uint8Array(o));const e=this.spiBus.recv(16);return null===e&&console.error("MAX6675: recv error"),e}catch(e){console.error(e)}return new Uint8Array}readRaw2(){try{let e=this.spiBus.transfer(new Uint8Array([0]))<<8;return e|=this.spiBus.transfer(new Uint8Array([0])),e}catch(e){console.error(e)}return 0}}},509:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.Pulsing=t.Logging=void 0;const s=i(971);pinMode(s.Gpio.ONBOARD_LED,OUTPUT);const n=["DEBUG","INFO","ERROR"];var o;!function(e){e[e.DEBUG=0]="DEBUG",e[e.INFO=1]="INFO",e[e.ERROR=2]="ERROR"}(o||(o={}));class a{static debug(e,t,...i){this._log(o.DEBUG,e,t,i)}static info(e,t,...i){this._log(o.INFO,e,t,i)}static error(e,t,...i){this._log(o.ERROR,e,t,i)}static _log(e,t,i,...s){e>=this.LOG_LEVEL&&(i=s?`${i} ${JSON.stringify(s)}`:i,console.log(`${n[e]} | [${t}] ${i}`))}}t.Logging=a,a.LOG_LEVEL=o.DEBUG;class r{static up(){this._state=HIGH,digitalWrite(s.Gpio.ONBOARD_LED,HIGH)}static down(){this._state=LOW,digitalWrite(s.Gpio.ONBOARD_LED,LOW)}static toggle(){this._state=this._state===HIGH?LOW:HIGH,digitalWrite(s.Gpio.ONBOARD_LED,this._state)}}t.Pulsing=r,r._state=HIGH},661:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SystemStatsService=void 0;const s=i(258),n=i(419),o=i(971);class a extends s.BaseService{constructor(e){super(e,{serviceCode:o.ServiceCode.SystemStats,serviceType:o.ServiceType.OnDemand,broadcastMode:o.BroadcastMode.OnDemandPolling}),this.data=new n.SystemStatsData}setup(){super.setup(),this.data.arch=process.arch,this.data.platform=process.platform,this.data.version=process.version,this.data.name=board.name,this.data.uid=board.uid}publishData(){const e=process.memoryUsage();this.data.heapTotal=e.heapTotal,this.data.heapUsed=e.heapUsed,this.data.heapPeak=e.heapPeak,super.publishData()}}t.SystemStatsService=a},132:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.ThermometerService=void 0;const s=i(878),n=i(894),o=i(509),a=i(258),r=i(419),c=i(971),d=c.Hardware.MUX_SENSOR_CONNECTED_ITEMS;let l=null,h=0;class u extends a.BaseService{constructor(e){super(e,{serviceCode:c.ServiceCode.Thermometer,serviceType:c.ServiceType.OnDemand,broadcastMode:c.BroadcastMode.OnDemandPolling}),this.data=new r.ThermometerData}start(){super.start(),super.publishData(),d.forEach((e=>{this.data[`ch_${e}`]=0})),this.thermoSensor=new s.MAX6675({bus:1,cs:c.Gpio.THERMO_SENSOR_CS,sck:c.Gpio.THERMO_SENSOR_CLK,miso:c.Gpio.THERMO_SENSOR_DATA}),this.thermoSensor.init(),this.mux=new n.HC4051({pinA:c.Gpio.MUX_OUT_A,pinB:c.Gpio.MUX_OUT_B,pinC:c.Gpio.MUX_OUT_C,connectedChannels:d}),this.mux.init(),setTimeout((()=>{l=setInterval((()=>{var e;this.mux&&this.thermoSensor&&(this.mux.enableChannelIndex(h),this.data[`ch_${d[h]}`]=null!==(e=this.thermoSensor.readCelcius())&&void 0!==e?e:0,o.Logging.debug(c.ServiceCode.Thermometer,"interval.read",{ch:d[h],cx:h,value:this.data[`ch_${d[h]}`],values:this.data}),h++,h>=d.length&&(h=0))}),c.Hardware.MUX_SENSOR_READ_INTERVAL)}),c.Hardware.MUX_SENSOR_READ_BATCH_TIMEOUT)}stop(){super.stop(),l&&(clearInterval(l),l=null),h=0,this.thermoSensor&&(this.thermoSensor.close(),delete this.thermoSensor,delete this.mux)}publishData(){super.publishData()}}t.ThermometerService=u},474:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.TurnSignalService=void 0;const s=i(672),n=i(509),o=i(584),a=i(971),r=i(258),c=i(419),d={blinkRate:a.Hardware.TURN_SIGNAL_BLINK_RATE,blinkTimeout:a.Hardware.TURN_SIGNAL_BLINK_TIMEOUT,btnDebounce:a.Hardware.TURN_SIGNAL_BTN_DEBOUNCE,diagCount:a.Hardware.TURN_SIGNAL_DIAG_COUNT,diagRate:a.Hardware.TURN_SIGNAL_DIAG_RATE},l=(0,s.readObject)(a.FILE_TSM_CONFIG)||c.TsmSettings.default(d),h={left:!1,right:!1},u={left:!1,right:!1};let S=0,p=0,g=0;const T=()=>{n.Logging.debug(a.ServiceCode.TurnSignalModule,"diagnostic",{_state:u,_action:h}),n.Pulsing.down(),v("diag-start"),S=setInterval((()=>{if(g>2*l.diagCount)return v("diag-complete ["+g+"] cycles"),void(g=0);u.left=!u.left,u.right=!u.right,digitalToggle(a.Gpio.SIGNAL_OUT_LEFT),digitalToggle(a.Gpio.SIGNAL_OUT_RIGHT),g++,n.Pulsing.toggle(),n.Logging.debug(a.ServiceCode.TurnSignalModule,"diagnostic",{_state:u,_diagCounter:g})}),l.diagRate)},v=e=>{clearInterval(S),clearTimeout(p),digitalWrite(a.Gpio.SIGNAL_OUT_LEFT,LOW),digitalWrite(a.Gpio.SIGNAL_OUT_RIGHT,LOW),S=0,p=0,u.left=!1,u.right=!1,g=0,n.Logging.debug(a.ServiceCode.TurnSignalModule,"disableFlasher",{reason:e}),n.Pulsing.up()},_=(e,t)=>{n.Logging.debug(a.ServiceCode.TurnSignalModule,"setFlasher",{isLeft:e,isRight:t}),n.Pulsing.down(),v("cancel-any"),(e||t)&&((e,t,i,s,o)=>{n.Logging.debug(a.ServiceCode.TurnSignalModule,"enableFlasher",{isLeft:e,isRight:t}),o?(p=0,n.Logging.debug(a.ServiceCode.TurnSignalModule,"will not cancel",{isLeft:e,isRight:t})):(n.Logging.debug(a.ServiceCode.TurnSignalModule,"will auto-cancel",{isLeft:e,isRight:t}),p=setTimeout((()=>{v("timeout"),h.left=!1,h.right=!1}),s)),S=setInterval((()=>{e&&(digitalToggle(a.Gpio.SIGNAL_OUT_LEFT),u.left=!u.left),t&&(digitalToggle(a.Gpio.SIGNAL_OUT_RIGHT),u.right=!u.right),n.Pulsing.toggle(),n.Logging.debug(a.ServiceCode.TurnSignalModule,"state",u)}),i)})(e,t,l.blinkRate,l.blinkTimeout,e&&t)},m=(e,t)=>{const i=e.read(),s=t.read();n.Logging.debug(a.ServiceCode.TurnSignalModule,`checkAction.left-current ${h.left}, read: ${i}`),n.Logging.debug(a.ServiceCode.TurnSignalModule,`checkAction.right-current ${h.right}, read: ${s}`),i===HIGH?(h.left=!h.left,n.Logging.debug(a.ServiceCode.TurnSignalModule,`checkAction.left-HIGH ${h.left}`)):h.left=!1,s===HIGH?(h.right=!h.right,n.Logging.debug(a.ServiceCode.TurnSignalModule,`checkAction.right-HIGH ${h.right}`)):h.right=!1,_(h.left,h.right)};class E extends r.BaseService{constructor(e){super(e,{serviceCode:a.ServiceCode.TurnSignalModule,serviceType:a.ServiceType.OnDemand,broadcastMode:a.BroadcastMode.OnDemandPolling,commands:Object.values(a.TurnSignalCommands)})}setup(){super.setup(),pinMode(a.Gpio.SIGNAL_IN_LEFT,INPUT_PULLUP),pinMode(a.Gpio.SIGNAL_IN_RIGHT,INPUT_PULLUP),pinMode(a.Gpio.SIGNAL_OUT_LEFT,OUTPUT),pinMode(a.Gpio.SIGNAL_OUT_RIGHT,OUTPUT),T(),this.leftButton=new o.Button(a.Gpio.SIGNAL_IN_LEFT,{mode:INPUT,event:RISING,debounce:l.btnDebounce}),this.rightButton=new o.Button(a.Gpio.SIGNAL_IN_RIGHT,{mode:INPUT,event:RISING,debounce:l.btnDebounce}),this.leftButton.on("click",(()=>{m(this.leftButton,this.rightButton)})),this.rightButton.on("click",(()=>{m(this.leftButton,this.rightButton)}))}handleCommand(e){if(super.handleCommand(e),e===a.TurnSignalCommands.DIAG)T();else{switch(e){case a.TurnSignalCommands.ALL:h.left=!0,h.right=!0;break;case a.TurnSignalCommands.LEFT:h.left=!h.left,h.right=!1;break;case a.TurnSignalCommands.RIGHT:h.left=!1,h.right=!h.right;break;case a.TurnSignalCommands.NONE:default:h.left=!1,h.right=!1}_(h.left,h.right)}}publishData(){this.data.state=u,this.data.action=h,super.publishData()}}t.TurnSignalService=E},46:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VehicleInfoService=void 0;const s=i(672),n=i(971),o=i(419),a=i(258),r=i(509);class c extends a.BaseService{constructor(e){super(e,{serviceCode:n.ServiceCode.VehicleInfo,serviceType:n.ServiceType.OnDemand,broadcastMode:n.BroadcastMode.OnDemandPolling}),this.data=new o.VehicleInfoData}peristSettings(e){super.peristSettings(e),this.setVehicleInfo(JSON.parse(e))}setVehicleInfo(e){e?r.Logging.debug(n.ServiceCode.VehicleInfo,"setVehicleInfo payload:",e):r.Logging.debug(n.ServiceCode.VehicleInfo,"setVehicleInfo payload: null");const t=this.getVehicleInfo(),i=e?Object.assign(t,e):t;r.Logging.debug(n.ServiceCode.VehicleInfo,"setVehicleInfo newVehicleInfo:",i),(0,s.writeObject)(n.FILE_VHI_DATA,i)}getVehicleInfo(){if((0,s.isFileExist)(n.FILE_VHI_DATA)){const e=(0,s.readFile)(n.FILE_VHI_DATA);return r.Logging.debug(n.ServiceCode.VehicleInfo,"getVehicleInfo vehicleInfo:",e),JSON.parse(e)}return new o.VehicleInfoData}setup(){(0,s.isFileExist)(n.FILE_VHI_DATA)?r.Logging.debug(n.ServiceCode.VehicleInfo,"setup vehicleInfoFile exists:",n.FILE_VHI_DATA):(r.Logging.debug(n.ServiceCode.VehicleInfo,"setup vehicleInfoFile:",n.FILE_VHI_DATA),this.setVehicleInfo(new o.VehicleInfoData)),super.setup()}publishData(){this.data=this.getVehicleInfo(),super.publishData()}}t.VehicleInfoService=c},71:(e,t,i)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.VehicleSensorService=void 0;const s=i(258),n=i(971),o=i(419),a=(n.Hardware.BATTERY_VOLTAGE_R1+n.Hardware.BATTERY_VOLTAGE_R2)/n.Hardware.BATTERY_VOLTAGE_R2;class r extends s.BaseService{constructor(e){super(e,{serviceCode:n.ServiceCode.VehicleSensor,serviceType:n.ServiceType.OnDemand,broadcastMode:n.BroadcastMode.OnDemandPolling}),this.rpmSignalCounter=0,this.rpmSignalLastTime=0,this.data=new o.VehicleSensorData}start(){super.start(),attachInterrupt(n.Gpio.VEHICLE_SENSOR_RPM,this.interruptRpmHandler.bind(this),RISING)}stop(){super.stop(),detachInterrupt(n.Gpio.VEHICLE_SENSOR_RPM)}interruptRpmHandler(){this.rpmSignalCounter++,console.log("rpm signal counter",this.rpmSignalCounter)}calculateRpm(){this.data.rpm=-1;const e=millis(),t=e-this.rpmSignalLastTime;t>0&&(this.data.rpm=this.rpmSignalCounter/t*1e3*60),this.rpmSignalCounter=0,this.rpmSignalLastTime=e}calculateSpeed(){this.data.speed=-1}calculateTpmsData(){this.data.tireFront=-1,this.data.tireRear=-1,this.data.tempFront=-1,this.data.tempRear=-1}calculateTemperature(){const e=analogRead(n.Gpio.VEHICLE_SENSOR_TEMP)*n.Hardware.ADC_REF_MAX_VOLTAGE;this.data.temp=n.Hardware.TEMPERATURE_OFFSET-(e-n.Hardware.ADC_OFFSET_VOLTAGE)/n.Hardware.TEMPERATURE_SCALING_FACTOR}calculateVref(){const e=analogRead(n.Gpio.VEHICLE_SENSOR_VREF);this.data.vref=e*n.Hardware.ADC_SCALING_FACTOR}calculateBattery(){const e=analogRead(n.Gpio.VEHICLE_SENSOR_BATT);this.data.batt=e*n.Hardware.ADC_REF_MAX_VOLTAGE*a}setup(){super.setup(),pinMode(n.Gpio.VEHICLE_SENSOR_BATT,INPUT),pinMode(n.Gpio.VEHICLE_SENSOR_AUX,INPUT),pinMode(n.Gpio.VEHICLE_SENSOR_RPM,INPUT),pinMode(n.Gpio.VEHICLE_SENSOR_SPEED,INPUT),pinMode(n.Gpio.VEHICLE_SENSOR_IGN,INPUT)}publishData(){this.data.uptime=millis(),this.calculateTemperature(),this.calculateVref(),this.calculateBattery(),this.calculateRpm(),this.calculateSpeed(),this.calculateTpmsData(),super.publishData()}}t.VehicleSensorService=r},672:function(e,t,i){var s=this&&this.__awaiter||function(e,t,i,s){return new(i||(i=Promise))((function(n,o){function a(e){try{c(s.next(e))}catch(e){o(e)}}function r(e){try{c(s.throw(e))}catch(e){o(e)}}function c(e){var t;e.done?n(e.value):(t=e.value,t instanceof i?t:new i((function(e){e(t)}))).then(a,r)}c((s=s.apply(e,t||[])).next())}))};Object.defineProperty(t,"__esModule",{value:!0}),t.scaler=t.readObject=t.writeObject=t.readFile=t.writeFile=t.isFileExist=void 0;const n=i(383),o=new TextEncoder,a=new TextDecoder;t.isFileExist=e=>n.default.existsSync(e),t.writeFile=(e,t)=>s(void 0,void 0,void 0,(function*(){yield n.default.writeFile(e,o.encode(t))})),t.readFile=e=>s(void 0,void 0,void 0,(function*(){const t=yield n.default.readFile(e);return a.decode(t)})),t.writeObject=(e,i)=>s(void 0,void 0,void 0,(function*(){yield(0,t.writeFile)(e,JSON.stringify(i))})),t.readObject=e=>s(void 0,void 0,void 0,(function*(){const i=yield(0,t.readFile)(e);return JSON.parse(i)})),t.scaler=(e,t)=>{const i=(t[1]-t[0])/(e[1]-e[0]);return s=>(s-e[0])*i+t[0]}},971:(e,t)=>{var i,s,n;Object.defineProperty(t,"__esModule",{value:!0}),t.Gpio=t.Hardware=t.EventType=t.TurnSignalCommands=t.ServiceCommand=t.ServiceCode=t.BroadcastMode=t.ServiceStatus=t.ServiceType=t.Seperator=t.FILE_BUNDLE=t.FILE_VHI_DATA=t.FILE_TSM_CONFIG=t.MaxItemSize=void 0,t.MaxItemSize=9999,t.FILE_TSM_CONFIG="data.tsm-config.json",t.FILE_VHI_DATA="data-vehicle-info.json",t.FILE_BUNDLE="bundle.js",t.Seperator={SerialCommand:"+",ServiceData:"="},function(e){e.AlwaysRun="ALWAYS_RUN",e.OnDemand="ON_DEMAND",e.OneTime="ONE_TIME"}(i||(t.ServiceType=i={})),function(e){e.Initialized="INITIALIZED",e.Available="AVAILABLE",e.Ready="READY",e.Started="STARTED",e.Stopped="STOPPED",e.Error="ERROR"}(s||(t.ServiceStatus=s={})),function(e){e.ContinuousStream="CONTINUOUS_STREAM",e.OnDemandPolling="ON_DEMAND_POLLING"}(n||(t.BroadcastMode=n={})),t.ServiceCode={SystemStats:"SYS",VehicleSensor:"VHC",VehicleInfo:"VHI",Thermometer:"THE",TurnSignalModule:"TSM",Module:"M0",EventBus:"BUS",Main:"MAIN",Heartbeat:"BEAT"},t.ServiceCommand={START:"START",STOP:"STOP",INFO:"INFO",DATA:"DATA",SET:"SET"},t.TurnSignalCommands={DIAG:"DIAG",LEFT:"LEFT",RIGHT:"RIGHT",ALL:"ALL",NONE:"NONE"},t.EventType={CommandForModule:"MODULE_COMMAND",CommandForService:"SERVICE_COMMAND",DataFromService:"SERVICE_DATA",DataFromSerial:"SERIAL_DATA"},t.Hardware={MCU_NAME:"HDMCU",MUX_SENSOR_CONNECTED_ITEMS:[0,1,2,3,4,5,6,7],MUX_SENSOR_READ_INTERVAL:1e3,MUX_SENSOR_READ_BATCH_TIMEOUT:3e3,TURN_SIGNAL_BTN_DEBOUNCE:100,TURN_SIGNAL_BLINK_RATE:400,TURN_SIGNAL_BLINK_TIMEOUT:2e4,TURN_SIGNAL_DIAG_RATE:100,TURN_SIGNAL_DIAG_TIMEOUT:2e3,TURN_SIGNAL_DIAG_COUNT:3,ADC_BIT_MAX_VALUE:4096,ADC_REF_MAX_VOLTAGE:3.3,ADC_SCALING_FACTOR:6.95,ADC_OFFSET_VOLTAGE:.706,TEMPERATURE_SCALING_FACTOR:.001721,TEMPERATURE_OFFSET:27,BATTERY_VOLTAGE_R1:33e3,BATTERY_VOLTAGE_R2:7500,SERVICE_POLL_INTERVAL:5e3,HEARTBEAT_PUSH_INTERVAL:5e3},t.Gpio={ONBOARD_LED:25,VEHICLE_SENSOR_TEMP:30,VEHICLE_SENSOR_VREF:29,VEHICLE_SENSOR_SPEED:28,VEHICLE_SENSOR_RPM:27,VEHICLE_SENSOR_BATT:26,VEHICLE_SENSOR_IGN:21,VEHICLE_SENSOR_AUX:20,SIGNAL_IN_LEFT:19,SIGNAL_IN_RIGHT:18,SIGNAL_OUT_LEFT:16,SIGNAL_OUT_RIGHT:17,THERMO_SENSOR_CLK:10,THERMO_SENSOR_DATA:12,THERMO_SENSOR_CS:13,MUX_OUT_A:9,MUX_OUT_B:8,MUX_OUT_C:7,BT_SERIAL_RX:1,BT_SERIAL_TX:0}},419:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.MuxSettings=t.TsmSettings=t.TsmControlData=t.TsmData=t.SystemStatsData=t.ThermometerData=t.VehicleSensorData=t.VehicleInfoData=void 0,t.VehicleInfoData=class{constructor(){this.model="",this.vin="",this.year=0,this.make="",this.owner="",this.plate="",this.regId="",this.oilDate=0,this.oilKm=0,this.oilIntervalKm=0,this.tireFrontInfo="",this.tireRearInfo="",this.tireFrontDate=0,this.tireRearDate=0,this.tireFrontKm=0,this.tireRearKm=0,this.beltInfo="",this.beltDate=0,this.batteryInfo="",this.batteryDate=0,this.inspectDate=0,this.insuranceDate=0,this.serviceDate=0,this.serviceInterval=0}},t.VehicleSensorData=class{constructor(){this.temp=0,this.vref=0,this.batt=0,this.rpm=0,this.speed=0,this.tireFront=0,this.tempFront=0,this.tireRear=0,this.tempRear=0}},t.ThermometerData=class{constructor(){this.ch_0=0,this.ch_1=0,this.ch_2=0,this.ch_3=0,this.ch_4=0,this.ch_5=0,this.ch_6=0,this.ch_7=0}},t.SystemStatsData=class{constructor(){this.arch="",this.platform="",this.version="",this.name="",this.uid="",this.heapTotal=0,this.heapUsed=0,this.heapPeak=0}},t.TsmData=class{constructor(){this.state=new i,this.action=new i}};class i{constructor(){this.left=!1,this.right=!1}}t.TsmControlData=i,t.TsmSettings=class{constructor(){this.blinkRate=0,this.blinkTimeout=0,this.btnDebounce=0,this.diagCount=0,this.diagRate=0}static default(e){return{blinkRate:e.blinkRate,blinkTimeout:e.blinkTimeout,btnDebounce:e.btnDebounce,diagCount:e.diagCount,diagRate:e.diagRate}}},t.MuxSettings=class{constructor(){this.sensorItems=[],this.readInterval=0,this.readBatchTimeout=0}}},597:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.SchemaVersion=void 0,t.SchemaVersion="2024-11-18T20:56:23"},584:e=>{e.exports=__webpack_require__(1)},261:e=>{e.exports=__webpack_require__(2)},383:e=>{e.exports=__webpack_require__(3)},291:e=>{e.exports=__webpack_require__(4)},55:e=>{e.exports=__webpack_require__(5)},98:e=>{e.exports=__webpack_require__(6)},8:e=>{e.exports=__webpack_require__(7)}},t={};function i(s){var n=t[s];if(void 0!==n)return n.exports;var o=t[s]={exports:{}};return e[s].call(o.exports,o,o.exports,i),o.exports}(()=>{const e=i(55),t=i(509),s=i(642),n=i(416),o=i(597),a=i(971),r=i(474),c=i(661),d=i(71),l=i(132),h=i(46);e.default.setTime(-2209078556e3),t.Pulsing.up(),t.Logging.info(a.ServiceCode.Main,"schema version",o.SchemaVersion);const u=[new h.VehicleInfoService(s.eventBus),new d.VehicleSensorService(s.eventBus),new c.SystemStatsService(s.eventBus),new l.ThermometerService(s.eventBus),new r.TurnSignalService(s.eventBus)];u.forEach((e=>{e.setup(),e.options.serviceType===a.ServiceType.AlwaysRun&&e.start()})),s.eventBus.on(a.EventType.CommandForModule,((e,i,s)=>{t.Logging.debug(a.ServiceCode.Main,a.EventType.CommandForModule,{serviceCode:e,command:i,rawData:s}),(e=>{switch(e){case"DIAG":t.Logging.info(a.ServiceCode.Main,"diagnostic event"),(0,n.publishToSerial)(a.ServiceCode.Main,"DIAG","diagnostic event");break;case"START":u.filter((e=>e.options.serviceType===a.ServiceType.OnDemand)).forEach((e=>e.start())),(0,n.publishToSerial)(a.ServiceCode.Main,"START",u.filter((e=>e.isRunning)).map((e=>e.options)));break;case"STOP":u.filter((e=>e.options.serviceType===a.ServiceType.OnDemand)).forEach((e=>e.stop())),(0,n.publishToSerial)(a.ServiceCode.Main,"STOP",u.filter((e=>!e.isRunning)).map((e=>e.options)));break;case"LIST_ALL":t.Logging.info(a.ServiceCode.Main,"list all services",u.map((e=>e.options))),(0,n.publishToSerial)(a.ServiceCode.Main,"LIST_ALL",u.map((e=>e.options)));break;case"LIST_RUN":t.Logging.info(a.ServiceCode.Main,"list running services",u.filter((e=>e.isRunning)).map((e=>e.options))),(0,n.publishToSerial)(a.ServiceCode.Main,"LIST_RUN",u.filter((e=>e.isRunning)).map((e=>e.options)));break;default:t.Logging.error(a.ServiceCode.Main,"unknown module command",e),(0,n.publishToSerial)(a.ServiceCode.Main,"ERR",`unknown module command: ${e}`)}})(i)}))})()})();
//# sourceMappingURL=bundle.js.map
})();

/******/ })()
;