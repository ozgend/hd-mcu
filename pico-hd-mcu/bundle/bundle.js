(()=>{var e={737:(e,t,i)=>{const s=i(570),{ServiceCommand:a,EventType:n,ServiceStatus:r,Broadcasting:o}=i(772),{SchemaVersion:l}=i(972);e.exports=class{constructor(e,{serviceCode:t,serviceType:i,updateInterval:s,broadcastMode:l,idleTimeout:h,commands:c}){this.options={serviceCode:t,serviceType:i,updateInterval:s??5e3,idleTimeout:h??12e4,broadcastMode:l??o.OnDemandPolling,commands:c&&c.length>0?[...Object.values(a),...c]:Object.values(a)},this.eventBus=e??{emit:()=>{}},this.status=r.Initialized,this.broadcastPid=null,this.isRunning=!1,this.data={},this.eventBus.on(n.CommandForService,((e,t,i)=>{e===this.options.serviceCode&&this.handleCommand(t,i)}))}handleCommand(e,t){switch(s.debug(this.options.serviceCode,n.CommandForService,e,t),e){case a.START:this.start();break;case a.STOP:this.stop();break;case a.INFO:this.publishInformation();break;case a.DATA:this.publishData();break;case a.SET:this.peristSettings(t)}}isStarted(){return this.status===r.Started}setup(){s.info(this.options.serviceCode,"setup"),this.status=r.Available}start(){this.isStarted()?s.info(this.options.serviceCode,"already running"):(s.info(this.options.serviceCode,"starting"),this.isRunning=!0,this.options.broadcastMode===o.ContinuousStream&&(this.broadcastPid=setInterval((()=>{this.publishData()}),this.options.updateInterval)),s.info(this.options.serviceCode,"started."),this.options.broadcastMode===o.ContinuousStream&&setTimeout((()=>{this.stop()}),this.options.idleTimeout),this.status=r.Started,this.publishInformation())}stop(){this.isRunning?(s.info(this.options.serviceCode,"stopping"),this.broadcastPid&&clearInterval(this.broadcastPid),this.isRunning=!1,this.broadcastPid=null,s.info(this.options.serviceCode,"stopped."),this.status=r.Stopped,this.publishInformation()):s.info(this.options.serviceCode,"already stopped")}getInfo(){return{schemaVersion:l,status:this.status,isRunning:this.isRunning,...this.options}}peristSettings(e){s.debug(this.options.serviceCode,a.SET,e)}publishInformation(){s.debug(this.options.serviceCode,a.INFO,this.isRunning),this.eventBus.emit(n.DataFromService,this.options.serviceCode,a.INFO,this.getInfo())}publishData(){s.debug(this.options.serviceCode,a.DATA),this.eventBus.emit(n.DataFromService,this.options.serviceCode,a.DATA,this.data)}}},867:(e,t,i)=>{const{EventEmitter:s}=i(261),{UART:a}=i(8),{writeFile:n}=i(413),r=i(570),{ServiceCode:o,EventType:l,Seperator:h,ServiceCommand:c,Hardware:d,FILE_BUNDLE:u}=i(772),p={baudrate:9600,bits:8,partity:a.PARTIY_NONE,stop:1,flow:a.FLOW_NONE,bufferSize:2048},T=new a(0,p);setTimeout((()=>{T.write(`AT+NAME${d.MCU_NAME}\n`),r.info(o.EventBus,"uart setup done",`AT+NAME${d.MCU_NAME}`)}),1e3),r.info(o.EventBus,"uart ready",p.baudrate);const S=new class extends s{};r.info(o.EventBus,"emitter ready");let _="",E="",I=!1;T.on("data",(e=>{e.forEach((e=>!I&&_.includes("<START>")?(I=!0,E="",void(_="")):I&&_.includes("<END>")?(I=!1,m(E),E="",void(_="")):void(10===e?(I?E+=_:_.includes("OK")?r.debug(o.EventBus,"SERIAL_PAYLOAD",_):S.emit(l.DataFromSerial,_.trim()),_=""):0!==e&&(_+=String.fromCharCode(e).trim()))))}));const m=e=>{n(u,e)};S.on(l.DataFromService,((e,t,i)=>{r.debug(o.EventBus,l.DataFromService,{serviceCode:e,eventType:t,serviceData:i}),T.write(`${e}${h.SerialCommand}${t}${h.ServiceData}${JSON.stringify(i)}\n`)})),S.on(l.DataFromSerial,(e=>{r.debug(o.EventBus,l.DataFromSerial,{serialPayload:e});let t=e.split(h.SerialCommand);const i=t[0];let s,a=null;t[1].startsWith(c.SET)?(t=t[1].split(h.ServiceData),s=t[0],a=t[1]):s=t[1],r.debug(o.EventBus,l.DataFromSerial,{serviceCode:i,command:s,data:a}),e.startsWith(o.Module)?S.emit(l.CommandForModule,i,s,a):S.emit(l.CommandForService,i,s,a)})),r.info(o.EventBus,"eventBus ready"),setInterval((()=>{T.write("0_heartbeat\n")}),d.HEARTBEAT_PUSH_INTERVAL),e.exports={eventBus:S,publishToSerial:(e,t,i)=>{S.emit(l.DataFromService,e,t,i)}}},669:e=>{const t=[[LOW,LOW,LOW],[LOW,LOW,HIGH],[LOW,HIGH,LOW],[LOW,HIGH,HIGH],[HIGH,LOW,LOW],[HIGH,LOW,HIGH],[HIGH,HIGH,LOW],[HIGH,HIGH,HIGH]];e.exports=class{constructor(e){this.pinData=e.pinData,this.pinA=e.pinA,this.pinB=e.pinB,this.pinC=e.pinC,this.pinInhibit=e.pinInhibit,this.connectedChannels=e.connectedChannels||[0,1,2,3,4,5,6,7],e.connectedChannels?this.connectedChannelSize=e.connectedChannels.length:this.connectedChannelSize=e.connectedChannelSize||8}init(){pinMode(this.pinA,OUTPUT),pinMode(this.pinB,OUTPUT),pinMode(this.pinC,OUTPUT),this.pinData&&pinMode(this.pinData,INPUT),this.pinInhibit&&pinMode(this.pinInhibit,OUTPUT),this.enableChannelIndex(0)}enableChannel(e){return this.connectedChannels.indexOf(e)<0?(console.error(`HC4051: channel not connected: ${e} (connected: ${this.connectedChannels})`),!1):this.enableChannelIndex(this.connectedChannels.indexOf(e))}enableChannelIndex(e){return e>=8?(console.error(`HC4051: channel out of range: ${e} (max: 7)`),!1):(this.pinInhibit&&digitalWrite(this.pinInhibit,LOW),digitalWrite(this.pinC,t[e][0]),digitalWrite(this.pinB,t[e][1]),digitalWrite(this.pinA,t[e][2]),!0)}disableAll(){this.pinInhibit&&digitalWrite(this.pinInhibit,HIGH)}}},81:(e,t,i)=>{const{GPIO:s}=i(291),{SPI:a}=i(98);let n=[0,0,0,0];e.exports=class{constructor(e){this.cs=e.cs||13,this.bus=e.bus||1,this.spiOptions={mode:e.mode||a.MODE_1,baudrate:e.baudrate||2e6,bitorder:e.bitorder||a.MSB,sck:e.sck||10,clk:e.sck||10,miso:e.miso||12,mosi:-1}}init(){try{return this.spiBus=new a(this.bus,this.spiOptions),this.spiCs=new s(this.cs,OUTPUT),this.spiCs.high(),console.log("MAX6675: init"),console.log(this.spiCs),console.log(this.spiBus),!0}catch(e){return console.error(e),!1}}close(){this.spiBus&&(console.log("MAX6675: close"),this.spiBus.close())}readCelcius(){let e=this.readRaw();return 4&e?(console.error("MAX6675: no thermocouple attached!"),null):.25*(e>>3)}readFahrenheit(){return 1.8*this.readCelcius()+32}readRaw(){if(this.spiCs){this.spiCs.low();let e=this.readRaw2();return this.spiCs.high(),e}return console.error("SPICS is not initialized"),0}readRaw1(){try{this.spiBus.send(new Uint8Array(n));let e=this.spiBus.recv(16);return null===e&&console.error("MAX6675: recv error"),e}catch(e){console.error(e)}return[]}readRaw2(){try{let e=this.spiBus.transfer(new Uint8Array([0]))<<8;return e|=this.spiBus.transfer(new Uint8Array([0])),e}catch(e){console.error(e)}return[]}}},570:(e,t,i)=>{const{Gpio:s}=i(772);pinMode(s.ONBOARD_LED,OUTPUT);const a=["DEBUG","INFO","ERROR"],n=(e,t,i,s)=>{e>=0&&(i=s?`${i} ${JSON.stringify(s)}`:i,console.log(`${a[e]} | [${t}] ${i}`))},r={_state:HIGH,up:()=>{r._state=HIGH,digitalWrite(s.ONBOARD_LED,HIGH)},down:()=>{r._state=LOW,digitalWrite(s.ONBOARD_LED,LOW)},toggle:()=>{r._state=r._state===HIGH?LOW:HIGH,digitalWrite(s.ONBOARD_LED,r._state)}};e.exports={info:(e,t,i)=>{n(1,e,t,i)},error:(e,t,i)=>{n(2,e,t,i)},debug:(e,t,i)=>{n(0,e,t,i)},pulse:r}},484:(e,t,i)=>{const s=i(737),{SystemStatsData:a}=i(870),{ServiceCode:n,ServiceType:r,Broadcasting:o}=i(772);e.exports=class extends s{constructor(e){super(e,{serviceCode:n.SystemStats,serviceType:r.ON_DEMAND,broadcastMode:o.OnDemandPolling}),this.data=new a}setup(){super.setup(),this.data.arch=process.arch,this.data.platform=process.platform,this.data.version=process.version,this.data.name=board.name,this.data.uid=board.uid}publishData(){const e=process.memoryUsage();this.data.heapTotal=e.heapTotal,this.data.heapUsed=e.heapUsed,this.data.heapPeak=e.heapPeak,super.publishData()}}},423:(e,t,i)=>{const s=i(81),a=i(669),n=i(570),r=i(737),{ThermometerData:o}=i(870),{ServiceCode:l,Gpio:h,ServiceType:c,Broadcasting:d,Hardware:u}=i(772),p=u.MUX_SENSOR_CONNECTED_ITEMS;let T=0,S=0;e.exports=class extends r{constructor(e){super(e,{serviceCode:l.Thermometer,serviceType:c.ON_DEMAND,broadcastMode:d.OnDemandPolling}),this.data=new o}start(){super.start(),super.publishData(),p.forEach((e=>{this.data[`ch_${e}`]=0})),this.thermoSensor=new s({bus:1,cs:h.THERMO_SENSOR_CS,sck:h.THERMO_SENSOR_CLK,miso:h.THERMO_SENSOR_DATA}),this.thermoSensor.init(),this.mux=new a({pinA:h.MUX_OUT_A,pinB:h.MUX_OUT_B,pinC:h.MUX_OUT_C,connectedChannels:p}),this.mux.init(),setTimeout((()=>{T=setInterval((()=>{this.mux.enableChannelIndex(S),this.data[`ch_${p[S]}`]=this.thermoSensor.readCelcius()??0,n.debug(l.Thermometer,"interval.read",{ch:p[S],cx:S,value:this.data[`ch_${p[S]}`],values:this.data}),S++,S>=p.length&&(S=0)}),u.MUX_SENSOR_READ_INTERVAL)}),u.MUX_SENSOR_READ_BATCH_TIMEOUT)}stop(){super.stop(),clearInterval(T),T=0,S=0,this.thermoSensor&&(this.thermoSensor.close(),delete this.thermoSensor,delete this.mux)}publishData(){super.publishData()}}},357:(e,t,i)=>{const{readObject:s,writeObject:a}=i(413),n=i(570),{Button:r}=i(584),{Hardware:o,Gpio:l,ServiceCode:h,TurnSignalCommands:c,ServiceType:d,Broadcasting:u,FILE_TSM_CONFIG:p}=i(772),T=i(737),{TsmSettings:S}=i(870),_={blinkRate:o.TURN_SIGNAL_BLINK_RATE,blinkTimeout:o.blinkTimeout,btnDebounce:o.TURN_SIGNAL_BTN_DEBOUNCE,diagCount:o.TURN_SIGNAL_DIAG_COUNT,diagRate:o.TURN_SIGNAL_DIAG_RATE},E=s(p)||S.default(_),I={left:!1,right:!1},m={left:!1,right:!1};let A=0,g=0,O=0;const R=()=>{n.debug(h.TurnSignalModule,"diagnostic",{_state:m,_action:I}),n.pulse.down(),N("diag-start"),A=setInterval((()=>{if(O>2*E.diagCount)return N("diag-complete ["+O+"] cycles"),void(O=0);m.left=!m.left,m.right=!m.right,digitalToggle(l.SIGNAL_OUT_LEFT),digitalToggle(l.SIGNAL_OUT_RIGHT),O++,n.pulse.toggle(),n.debug(h.TurnSignalModule,"diagnostic",{_state:m,_diagCounter:O})}),E.diagRate)},N=e=>{clearInterval(A),clearTimeout(g),digitalWrite(l.SIGNAL_OUT_LEFT,LOW),digitalWrite(l.SIGNAL_OUT_RIGHT,LOW),A=0,g=0,m.left=!1,m.right=!1,O=0,n.debug(h.TurnSignalModule,"disableFlasher",{reason:e}),n.pulse.up()},C=(e,t)=>{n.debug(h.TurnSignalModule,"setFlasher",{isLeft:e,isRight:t}),n.pulse.down(),N("cancel-any"),(e||t)&&((e,t,i,s,a)=>{n.debug(h.TurnSignalModule,"enableFlasher",{isLeft:e,isRight:t}),a?(g=0,n.debug(h.TurnSignalModule,"will not cancel",{isLeft:e,isRight:t})):(n.debug(h.TurnSignalModule,"will auto-cancel",{isLeft:e,isRight:t}),g=setTimeout((()=>{N("timeout"),I.left=!1,I.right=!1}),s)),A=setInterval((()=>{e&&(digitalToggle(l.SIGNAL_OUT_LEFT),m.left=!m.left),t&&(digitalToggle(l.SIGNAL_OUT_RIGHT),m.right=!m.right),n.pulse.toggle(),n.debug(h.TurnSignalModule,"state",m)}),i)})(e,t,E.blinkRate,E.blinkTimeout,e&&t)},v=(e,t)=>{let i=e.read(),s=t.read();n.debug(h.TurnSignalModule,`checkAction.left-current ${I.left}, read: ${i}`),n.debug(h.TurnSignalModule,`checkAction.right-current ${I.right}, read: ${s}`),i===HIGH&&HIGH,i===HIGH?(I.left=!I.left,n.debug(h.TurnSignalModule,`checkAction.left-HIGH ${I.left}`)):I.left=!1,s===HIGH?(I.right=!I.right,n.debug(h.TurnSignalModule,`checkAction.right-HIGH ${I.right}`)):I.right=!1,C(I.left,I.right)};e.exports=class extends T{constructor(e){super(e,{serviceCode:h.TurnSignalModule,serviceType:d.ON_DEMAND,broadcastMode:u.OnDemandPolling,commands:Object.values(c)})}setup(){super.setup(),pinMode(l.SIGNAL_IN_LEFT,INPUT_PULLUP),pinMode(l.SIGNAL_IN_RIGHT,INPUT_PULLUP),pinMode(l.SIGNAL_OUT_LEFT,OUTPUT),pinMode(l.SIGNAL_OUT_RIGHT,OUTPUT),R(),this.leftButton=new r(l.SIGNAL_IN_LEFT,{mode:INPUT,event:RISING,debounce:E.btnDebounce}),this.rightButton=new r(l.SIGNAL_IN_RIGHT,{mode:INPUT,event:RISING,debounce:E.btnDebounce}),this.leftButton.on("click",(()=>{v(this.leftButton,this.rightButton)})),this.rightButton.on("click",(()=>{v(this.leftButton,this.rightButton)}))}handleCommand(e){if(super.handleCommand(e),e===c.DIAG)R();else{switch(e){case c.ALL:I.left=!0,I.right=!0;break;case c.LEFT:I.left=!I.left,I.right=!1;break;case c.RIGHT:I.left=!1,I.right=!I.right;break;case c.NONE:default:I.left=!1,I.right=!1}C(I.left,I.right)}}publishData(){this.data.state=m,this.data.action=I,super.publishData()}}},683:(e,t,i)=>{const{writeObject:s,readFile:a,isFileExist:n}=i(413),r=i(570),o=i(737),{ServiceCode:l,ServiceType:h,Broadcasting:c,FILE_VHI_DATA:d}=i(772),{VehicleInfoData:u}=i(870);e.exports=class extends o{constructor(e){super(e,{serviceCode:l.VehicleInfo,serviceType:h.ON_DEMAND,broadcastMode:c.OnDemandPolling}),this.data=new u}peristSettings(e){super.peristSettings(e),this.setVehicleInfo(JSON.parse(e))}setVehicleInfo(e){e?r.debug(l.VehicleInfo,"setVehicleInfo payload:",e):r.debug(l.VehicleInfo,"setVehicleInfo payload: null");const t=this.getVehicleInfo(),i=e?Object.assign(t,e):t;r.debug(l.VehicleInfo,"setVehicleInfo newVehicleInfo:",i),s(d,i)}getVehicleInfo(){if(n(d)){const e=a(d);return r.debug(l.VehicleInfo,"getVehicleInfo vehicleInfo:",e),JSON.parse(e)}return new u}setup(){n(d)?r.debug(l.VehicleInfo,"setup vehicleInfoFile exists:",d):(r.debug(l.VehicleInfo,"setup vehicleInfoFile:",d),this.setVehicleInfo(new u)),super.setup()}publishData(){this.data=this.getVehicleInfo(),super.publishData()}}},750:(e,t,i)=>{i(570);const s=i(737),{VehicleSensorData:a}=i(870),{ServiceCode:n,Gpio:r,ServiceType:o,Hardware:l,Broadcasting:h}=i(772),c=(l.BATTERY_VOLTAGE_R1+l.BATTERY_VOLTAGE_R2)/l.BATTERY_VOLTAGE_R2;e.exports=class extends s{rpmSignalCounter=0;rpmSignalLastTime=0;constructor(e){super(e,{serviceCode:n.VehicleSensor,serviceType:o.ON_DEMAND,broadcastMode:h.OnDemandPolling}),this.data=new a}start(){super.start(),attachInterrupt(r.VEHICLE_SENSOR_RPM,this.interruptRpmHandler,RISING)}stop(){super.stop(),detachInterrupt(r.VEHICLE_SENSOR_RPM)}interruptRpmHandler(){this.rpmSignalCounter++,console.log("rpm signal counter",this.rpmSignalCounter)}calculateRpm(){this.data.rpm=-1;const e=millis(),t=e-this.rpmSignalLastTime;t>0&&(this.data.rpm=this.rpmSignalCounter/t*1e3*60),this.rpmSignalCounter=0,this.rpmSignalLastTime=e}calculateSpeed(){this.data.speed=-1}calculateTpmsData(){this.data.tireFront=-1,this.data.tireRear=-1,this.data.tempFront=-1,this.data.tempRear=-1}calculateTemperature(){this.data.raw_temp=analogRead(r.VEHICLE_SENSOR_TEMP),this.data.raw_temp_volts=this.data.raw_temp*l.ADC_REF_MAX_VOLTAGE,this.data.temp=l.TEMPERATURE_OFFSET-(this.data.raw_temp_volts-l.ADC_OFFSET_VOLTAGE)/l.TEMPERATURE_SCALING_FACTOR}calculateVref(){this.data.raw_vref=analogRead(r.VEHICLE_SENSOR_VREF),this.data.vref=this.data.raw_vref*l.ADC_SCALING_FACTOR}calculateBattery(){this.data.raw_batt=analogRead(r.VEHICLE_SENSOR_BATT),this.data.batt=this.data.raw_batt*l.ADC_REF_MAX_VOLTAGE*c}setup(){super.setup(),pinMode(r.VEHICLE_SENSOR_BATT,INPUT),pinMode(r.VEHICLE_SENSOR_AUX,INPUT),pinMode(r.VEHICLE_SENSOR_RPM,INPUT),pinMode(r.VEHICLE_SENSOR_SPEED,INPUT),pinMode(r.VEHICLE_SENSOR_IGN,INPUT)}publishData(){this.data.uptime=millis(),this.calculateTemperature(),this.calculateVref(),this.calculateBattery(),this.calculateRpm(),this.calculateSpeed(),this.calculateTpmsData(),super.publishData()}}},413:(e,t,i)=>{const s=i(383),a=new TextEncoder,n=new TextDecoder,r=(e,t)=>{s.writeFile(e,a.encode(t))},o=e=>n.decode(s.readFile(e));e.exports={scaler:(e,t)=>{const i=(t[1]-t[0])/(e[1]-e[0]);return s=>(s-e[0])*i+t[0]},isFileExist:e=>s.existsSync(e),writeFile:r,readFile:o,writeObject:(e,t)=>{r(e,JSON.stringify(t))},readObject:e=>{const t=o(e);return JSON.parse(t)}}},772:(e,t)=>{"use strict";var i,s,a;Object.defineProperty(t,"__esModule",{value:!0}),t.Gpio=t.Hardware=t.EventType=t.TurnSignalCommands=t.ServiceCommand=t.ServiceCode=t.BroadcastMode=t.ServiceStatus=t.ServiceType=t.Seperator=t.FILE_BUNDLE=t.FILE_VHI_DATA=t.FILE_TSM_CONFIG=t.MaxItemSize=void 0,t.MaxItemSize=9999,t.FILE_TSM_CONFIG="data.tsm-config.json",t.FILE_VHI_DATA="data-vehicle-info.json",t.FILE_BUNDLE="bundle.js",t.Seperator={SerialCommand:"+",ServiceData:"="},function(e){e.AlwaysRun="ALWAYS_RUN",e.OnDemand="ON_DEMAND",e.OneTime="ONE_TIME"}(i||(t.ServiceType=i={})),function(e){e.Initialized="INITIALIZED",e.Available="AVAILABLE",e.Ready="READY",e.Started="STARTED",e.Stopped="STOPPED",e.Error="ERROR"}(s||(t.ServiceStatus=s={})),function(e){e.ContinuousStream="CONTINUOUS_STREAM",e.OnDemandPolling="ON_DEMAND_POLLING"}(a||(t.BroadcastMode=a={})),t.ServiceCode={SystemStats:"SYS",VehicleSensor:"VHC",VehicleInfo:"VHI",Thermometer:"THE",TurnSignalModule:"TSM",Module:"M0",EventBus:"BUS",Main:"MAIN",Heartbeat:"BEAT"},t.ServiceCommand={START:"START",STOP:"STOP",INFO:"INFO",DATA:"DATA",SET:"SET"},t.TurnSignalCommands={DIAG:"DIAG",LEFT:"LEFT",RIGHT:"RIGHT",ALL:"ALL",NONE:"NONE"},t.EventType={CommandForModule:"MODULE_COMMAND",CommandForService:"SERVICE_COMMAND",DataFromService:"SERVICE_DATA",DataFromSerial:"SERIAL_DATA"},t.Hardware={MCU_NAME:"HDMCU",MUX_SENSOR_CONNECTED_ITEMS:[0,1,2,3,4,5,6,7],MUX_SENSOR_READ_INTERVAL:1e3,MUX_SENSOR_READ_BATCH_TIMEOUT:3e3,TURN_SIGNAL_BTN_DEBOUNCE:100,TURN_SIGNAL_BLINK_RATE:400,TURN_SIGNAL_BLINK_TIMEOUT:2e4,TURN_SIGNAL_DIAG_RATE:100,TURN_SIGNAL_DIAG_TIMEOUT:2e3,TURN_SIGNAL_DIAG_COUNT:3,ADC_BIT_MAX_VALUE:4096,ADC_REF_MAX_VOLTAGE:3.3,ADC_SCALING_FACTOR:6.95,ADC_OFFSET_VOLTAGE:.706,TEMPERATURE_SCALING_FACTOR:.001721,TEMPERATURE_OFFSET:27,BATTERY_VOLTAGE_R1:33e3,BATTERY_VOLTAGE_R2:7500,SERVICE_POLL_INTERVAL:5e3,HEARTBEAT_PUSH_INTERVAL:5e3},t.Gpio={ONBOARD_LED:25,VEHICLE_SENSOR_TEMP:30,VEHICLE_SENSOR_VREF:29,VEHICLE_SENSOR_SPEED:28,VEHICLE_SENSOR_RPM:27,VEHICLE_SENSOR_BATT:26,VEHICLE_SENSOR_IGN:21,VEHICLE_SENSOR_AUX:20,SIGNAL_IN_LEFT:19,SIGNAL_IN_RIGHT:18,SIGNAL_OUT_LEFT:16,SIGNAL_OUT_RIGHT:17,THERMO_SENSOR_CLK:10,THERMO_SENSOR_DATA:12,THERMO_SENSOR_CS:13,MUX_OUT_A:9,MUX_OUT_B:8,MUX_OUT_C:7,BT_SERIAL_RX:1,BT_SERIAL_TX:0}},870:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.MuxSettings=t.TsmSettings=t.TsmControlData=t.TsmData=t.SystemStatsData=t.ThermometerData=t.VehicleSensorData=t.VehicleInfoData=void 0;t.VehicleInfoData=function(){this.model="",this.vin="",this.year=0,this.make="",this.owner="",this.plate="",this.regId="",this.oilDate=0,this.oilKm=0,this.oilIntervalKm=0,this.tireFrontInfo="",this.tireRearInfo="",this.tireFrontDate=0,this.tireRearDate=0,this.tireFrontKm=0,this.tireRearKm=0,this.beltInfo="",this.beltDate=0,this.batteryInfo="",this.batteryDate=0,this.inspectDate=0,this.insuranceDate=0,this.serviceDate=0,this.serviceInterval=0};t.VehicleSensorData=function(){this.temp=0,this.vref=0,this.batt=0,this.rpm=0,this.speed=0,this.tireFront=0,this.tempFront=0,this.tireRear=0,this.tempRear=0};t.ThermometerData=function(){this.ch_0=0,this.ch_1=0,this.ch_2=0,this.ch_3=0,this.ch_4=0,this.ch_5=0,this.ch_6=0,this.ch_7=0};t.SystemStatsData=function(){this.arch="",this.platform="",this.version="",this.name="",this.uid="",this.heapTotal=0,this.heapUsed=0,this.heapPeak=0};t.TsmData=function(){this.state=new i,this.action=new i};var i=function(){this.left=!1,this.right=!1};t.TsmControlData=i;var s=function(){function e(){this.blinkRate=0,this.blinkTimeout=0,this.btnDebounce=0,this.diagCount=0,this.diagRate=0}return e.default=function(e){return{blinkRate:e.blinkRate,blinkTimeout:e.blinkTimeout,btnDebounce:e.btnDebounce,diagCount:e.diagCount,diagRate:e.diagRate}},e}();t.TsmSettings=s;t.MuxSettings=function(){this.sensorItems=[],this.readInterval=0,this.readBatchTimeout=0}},972:(e,t)=>{"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.SchemaVersion=void 0,t.SchemaVersion="2024-11-18T20:56:23"},584:e=>{"use strict";e.exports=require("button")},261:e=>{"use strict";e.exports=require("events")},383:e=>{"use strict";e.exports=require("fs")},291:e=>{"use strict";e.exports=require("gpio")},55:e=>{"use strict";e.exports=require("rtc")},98:e=>{"use strict";e.exports=require("spi")},8:e=>{"use strict";e.exports=require("uart")}},t={};function i(s){var a=t[s];if(void 0!==a)return a.exports;var n=t[s]={exports:{}};return e[s](n,n.exports,i),n.exports}i(55).setTime(-2209078556e3);const s=i(570);s.pulse.up();const{eventBus:a,publishToSerial:n}=i(867),{SchemaVersion:r}=i(972),{ServiceType:o,ServiceCode:l,EventType:h}=i(772),c=i(357),d=i(484),u=i(750),p=i(423),T=i(683);s.info(l.Main,"schema version",r);const S=[new T(a),new u(a),new d(a),new p(a),new c(a)];S.forEach((e=>{e.setup(),e.ServiceType===o.ALWAYS_RUN&&e.start()})),a.on(h.CommandForModule,((e,t,i)=>{s.debug(l.Main,h.CommandForModule,{serviceCode:e,command:t,rawData:i}),(e=>{switch(e){case"DIAG":s.info(l.Main,"diagnostic event"),n(l.Main,"DIAG","diagnostic event");break;case"START":S.filter((e=>e.options.serviceType===o.ON_DEMAND)).forEach((e=>e.start())),n(l.Main,"START",S.filter((e=>e.isRunning)).map((e=>e.options)));break;case"STOP":S.filter((e=>e.options.serviceType===o.ON_DEMAND)).forEach((e=>e.stop())),n(l.Main,"STOP",S.filter((e=>!e.isRunning)).map((e=>e.options)));break;case"LIST_ALL":s.info(l.Main,"list all services",S.map((e=>e.options))),n(l.Main,"LIST_ALL",S.map((e=>e.options)));break;case"LIST_RUN":s.info(l.Main,"list running services",S.filter((e=>e.isRunning)).map((e=>e.options))),n(l.Main,"LIST_RUN",S.filter((e=>e.isRunning)).map((e=>e.options)));break;default:s.error(l.Main,"unknown module command",e),n(l.Main,"ERR",`unknown module command: ${e}`)}})(t)}))})();